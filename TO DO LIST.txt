BROKEN WORDS
=================//

 


TO DO
================//
The separate thread's events may trigger while the store method is still working, thereby breaking the order of addition.
The only way to keep such a situation ordered is to turn the rolled out test string into a string array, split at spaces, to iterate keys over the result dictionaries.

should i use a foreach on the results or a string with the ordered keys?

+ cant modify an ordered table inside a foreach loop. have to take make collections with the information i need to remove whitespace items

+ implement logic to invoke those events
+ add spaces to entire sentence results in between words

+ finish refactoring optionaldebugger

+ optional debugger uses outputmanager in an old way. how do i update it?
	-the phoneme results are taken care of but getting the signal to put down some of the bool flags is challenging in in a separate thread.
	-I could use an event which the debugger would subscribe to. Any unforseen consequences?	

+ sentencesNonSpacedResultsFinished event
+ CurrentWordChanged event
+

+ exception enumeration already finished: optionaldebugger line 248
	solution: 
	-properties arent returned every tick. need a new way of storing that info. 
	wait until end of task?
	-use foreach on the dictionary instead of enumerator,	
	-throw exception if the two tables arent the same length	

+ place optional debugger's bool duplicate exists in the result sheet
		

+ test adjacentresults with dictionary words with values longer than their keys
+ test Intonation is accurate during dictionary dumps

+ implement phoneme choosing for glados
+ test async task
+ test cancellation token source in output manager
+ fix everything :^)

+ add computer voice support

+ think of good object builder for block. cant be terminal block
+ block should not play in realistic mode.
+ figure out how to implement new buttons and a text box.
    MyAPIGateway.TerminalControls.CustomControlGetter += TerminalControls_CustomControlGetter;
    then
    private static void TerminalControls_CustomControlGetter(IMyTerminalBlock block, List<IMyTerminalControl> controls)

    remove needed entries from controls argument(edited)

+ read the log for PrettyScaryDictionary crash. multithreading?

+ make basic number support.

+ test
+ fix everything :^)

+ FINISH
